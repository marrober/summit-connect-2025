apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-image-to-quay
spec:
  params:
    - name: quay-instance-url
      description: The URL of the quay instance
      type: string
      default: ""
    - name: quay-account
      description: The quay account that matches the credentials stored in the mounted secret.
      type: string
      default: ""
    - name: quay-repository
      description: The quay repository in which to store the image.
      type: string
      default: ""
    - name: image-stream-location
      type: string
      default: ""
      description: The full image url in the OpenShift image stream
    - name: STORAGE_DRIVER
      description: The Buildah storage STORAGE_DRIVER
      type: string
    - name: imageTag
      type: string
  results:
    - name: quay-image-repo-location
    - name: BASE_IMAGES_DIGESTS
    - description: Digest of the image just built
      name: IMAGE_DIGEST
    - description: Image repository where the built image was pushed
      name: IMAGE_URL
  steps:
    - name: buildah-pull-image
      command:
        - buildah
        - pull
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--root'
        - '/files/buildah-containers'
        - $(params.image-stream-location):$(params.imageTag)
      image: image-registry.openshift-image-registry.svc:5000/travel-ci/buildah:latest
      securityContext:
        capabilities:
          add: ["SETFCAP"]
      resources:
        limits:
          memory: 300Mi
          cpu: 300m
        requests:
          memory: 250Mi
          cpu: 150m
          
    - name: buildah-tag-image
      command:
        - buildah
        - tag
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--root'
        - '/files/buildah-containers'
        - $(params.image-stream-location):$(params.imageTag)
        - $(params.quay-instance-url)/$(params.quay-account)/$(params.quay-repository):$(params.imageTag)
      image: image-registry.openshift-image-registry.svc:5000/travel-ci/buildah:latest
      securityContext:
        capabilities:
          add: ["SETFCAP"]
      resources:
        limits:
          memory: 300Mi
          cpu: 300m
        requests:
          memory: 250Mi
          cpu: 150m

    - name: push-image-to-quay
      script: |
        # echo $(workspaces.resources.path)/sbom-image.json

        # echo "3"
        # base_image_name=$(buildah inspect --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --format '{{ index .ImageAnnotations "org.opencontainers.image.base.name"}}' $(params.quay-instance-url)/$(params.quay-account)/$(params.quay-repository):$(params.imageTag) | cut -f1 -d'@')

        # echo "4 - base image name taken from the built image"
        # echo $base_image_name
     
        # base_image_digest=$(buildah inspect --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --format '{{ index .ImageAnnotations "org.opencontainers.image.base.digest"}}' $(params.quay-instance-url)/$(params.quay-account)/$(params.quay-repository):$(params.imageTag))

        # echo "5 - base image digest taken from the built image"

        # echo $base_image_digest 

        # cat "$(workspaces.source.path)"/image-digest | tee $(results.IMAGE_DIGEST.path)

        # echo -n "$(params.quay-instance-url)/$(params.quay-account)/$(params.quay-repository):$(params.imageTag)" | tee $(results.IMAGE_URL.path)        

        # echo "Image to update"

        # echo $(params.quay-instance-url)/$(params.quay-account)/$(params.quay-repository):$(params.imageTag)

        # container=$(buildah from --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --pull-never $(params.quay-instance-url)/$(params.quay-account)/$(params.quay-repository):$(params.imageTag))

        # echo "Container"
        # echo $container

        # buildah copy --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers $container  $(workspaces.resources.path)/sbom-image.json /root/buildinfo/content_manifests/

        # echo "copy done"

        # buildah config --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers -a org.opencontainers.image.base.name=${base_image_name} -a org.opencontainers.image.base.digest=${base_image_digest} $container

        # echo "commit container image"
        # buildah --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers commit $container $(params.quay-instance-url)/$(params.quay-account)/$(params.quay-repository):$(params.imageTag)

        buildah images --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers

        echo "push container image"
        buildah push --storage-driver=$(params.STORAGE_DRIVER) --authfile /etc/secret-volume/.dockerconfigjson --root /files/buildah-containers --digestfile $(workspaces.files.path)/image-digest $(params.quay-instance-url)/$(params.quay-account)/$(params.quay-repository):$(params.imageTag)

        cat "$(workspaces.files.path)"/image-digest | tee $(results.IMAGE_DIGEST.path)

        echo -n "$(params.quay-instance-url)/$(params.quay-account)/$(params.quay-repository):$(params.imageTag)" | tee $(results.IMAGE_URL.path)

        echo "$(params.quay-instance-url)/$(params.quay-account)/$(params.quay-repository):$(params.imageTag)" > $(results.quay-image-repo-location.path)

        echo -------------------------------------

        cat $(results.quay-image-repo-location.path)        

      image: image-registry.openshift-image-registry.svc:5000/travel-ci/buildah:latest
      securityContext:
        capabilities:
          add: ["SETFCAP"]
      resources:
        limits:
          memory: 300Mi
          cpu: 300m
        requests:
          memory: 250Mi
          cpu: 150m
      volumeMounts:
        - name: quay-auth-secret
          mountPath: /etc/secret-volume
          readOnly: true

#    - name: upload-sbom
#      image: image-registry.openshift-image-registry.svc:5000/travel-ci/cosign:v2.1.1
#      args:
#        - attach
#        - sbom
#        - --sbom
#        - sbom-image.json
#        - --verbose
#        - --type
#        - cyclonedx
#        - $(params.quay-instance-url)/$(params.quay-account)/$(params.quay-repository):$(params.imageTag)
#      workingDir: $(workspaces.resources.path)
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: quay-auth-secret
  workspaces:
  - name: files
    mountPath: /files
  - name: resources
    mountPath: /resources
